name: CI
on: push

jobs:
  client-build:
    name: Client, Lint and Build
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Install Client Dependencies
        run: yarn --cwd "client" install --non-interactive --pure-lockfile
      - name: Lint Client
        run: yarn --cwd "client" run lint
      - name: Build Client
        run: CI=false yarn --cwd "client" run build
      - name: Archive Production Client
        uses: actions/upload-artifact@master
        with:
          name: client
          path: client/build

  client-deploy:
    name: Client, Deploy
    needs: client-build
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      COMMIT_ID: ${{ github.sha }}
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: Install Firebase
        run: npm install -g firebase-tools
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: client
          path: client/build
      - name: Add Firebase to Path
        run: alias firebase="`npm config get prefix`/bin/firebase"
      - name: Deploy to Firebase
        run: firebase deploy --only hosting -m "Github Action, Commit $COMMIT_ID" --non-interactive --token $FIREBASE_TOKEN

  server-build:
    name: Server, Lint and Build
    runs-on: ubuntu-latest
    steps:
      - name: Check Out
        uses: actions/checkout@v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install Server Dependencies
        run: yarn --cwd "server" install --non-interactive --pure-lockfile
      - name: Lint Server
        run: CI=false yarn --cwd "server" run lint
      # - name: Build Server
      #  run: CI=false yarn --cwd "server" run build
      # - name: Archive Production Server
      #  uses: actions/upload-artifact@master
      #  with:
      #    name: server
      #    path: server/dist
